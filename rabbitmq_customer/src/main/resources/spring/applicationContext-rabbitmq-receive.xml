<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/rabbit
	http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<!-- 定义RabbitMQ的连接工厂 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbit.ip}" port="${rabbit.port}" username="${rabbit.username}" password="${rabbit.password}"
		virtual-host="${rabbit.vhost}" />

	<!-- MQ的管理，包括队列、交换器等 -->
	<rabbit:admin connection-factory="connectionFactory" />
	
	<!-- 定义消息队列 -->
	<rabbit:queue name="jtfh-spider" auto-declare="true"/>
	
	<!-- 定义交换机，并且完成队列和交换机的绑定 -->
	<rabbit:direct-exchange name="spiderExchange" auto-declare="true">
		<rabbit:bindings>
			<!-- 前台系统只接收商品更新的消息，key路由key -->
			<rabbit:binding queue="jtfh-spider" key="spider01"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 定义监听 -->
	<rabbit:listener-container connection-factory="connectionFactory">
		<!-- 监听一个队列，当队列中有消息，就会自动触发类.方法，传递消息就作为方法的参数，根据方法声明的参数强转 -->
		<!--<rabbit:listener ref="rabbitUserService" method="saveUserId01" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId02" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId03" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId04" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId05" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId06" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId07" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId08" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId09" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId10" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId11" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId12" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId13" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId14" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId15" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId16" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId17" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId18" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId19" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId20" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId21" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId22" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId23" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId24" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId25" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId26" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId27" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId28" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId29" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserId30" queue-names="jtfh-spider"/>-->

		<!--<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>
		<rabbit:listener ref="rabbitUserService" method="insertNotExistToErrorUserId" queue-names="jtfh-spider"/>-->


		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>
		<rabbit:listener ref="rabbitUserService" method="saveUserFromQuery" queue-names="jtfhqu-spider"/>




	</rabbit:listener-container>

</beans>